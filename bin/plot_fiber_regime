#!/usr/bin/env python3
"""Plot scattering regime of fibers.

Usage: plot_fiber_regime <output>

Arguments:

- output: Output filename (PDF).

Examples:

Plot scattering regime of fibers.

bin/plot_fiber_regime 'plot/Scattering regime of fibers.pdf'
"""

import sys
import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl
import matplotlib.lines as mlines

THRESHOLD = 50.

if __name__ == '__main__':
	if len(sys.argv) != 2:
		sys.stderr.write(sys.modules[__name__].__doc__)
		sys.exit(1)
	output = sys.argv[1]

	length = np.arange(0., 5001., 10.)
	lambda_ = np.arange(0.2, 50., 0.1)
	diameter = 6.*np.log(1. + length/30.)

	n = len(length)
	m = len(lambda_)

	x = np.full((n, m), np.nan, np.float64)

	for i in range(n):
		for j in range(m):
			x1 = np.pi*length[i]/lambda_[j]
			x2 = np.pi*diameter[i]/lambda_[j]
			if x1 >= THRESHOLD and x2 >= THRESHOLD:
				x[i, j] = 1
			elif x1 >= THRESHOLD and x2 < THRESHOLD:
				x[i, j] = 2
			elif x1 < THRESHOLD and x2 >= THRESHOLD:
				x[i, j] = 3
			else:
				x[i, j] = 4

	mpl.rc('font', family='Public Sans')
	mpl.rc('axes', linewidth=0.3)
	mpl.rc('axes', grid=True)
	mpl.rc('lines', linewidth=1)
	mpl.rc('xtick.major', width=0.3)
	mpl.rc('ytick.major', width=0.3)
	mpl.rc('legend', framealpha=1)
	mpl.rc('legend', facecolor='#eeeeee')
	mpl.rc('legend', edgecolor='none')
	mpl.rc('legend', fancybox=False)
	mpl.rc('legend', fontsize=9)
	mpl.rc('grid', color='k')
	mpl.rc('grid', alpha=0.2)
	mpl.rc('grid', lw=0.1)

	cmap = plt.get_cmap('tab10')

	plt.figure(figsize=(5.5,5))

	plt.contourf(length, lambda_, x.T,
		levels=[0.5, 1.5, 2.5, 3.5, 4.5],
		colors=[cmap(0), cmap(2), cmap(1), cmap(3)],
	)
	plt.xlim(0, 5000)
	plt.ylim(0, 50)
	plt.xlabel('Length ($\mu$m)')
	plt.ylabel('Wavelength ($\mu$m)')
	plt.title('Scattering regime of fibers')
	plt.legend(handles=[
			mlines.Line2D([], [], marker="s", markersize=5, linewidth=0, color=cmap(0)),
			mlines.Line2D([], [], marker="s", markersize=5, linewidth=0, color=cmap(2)),
			mlines.Line2D([], [], marker="s", markersize=5, linewidth=0, color=cmap(3)),
		],
		labels=[
			'$x$(diameter) ≥ 50, $x$(length) ≥ 50',
			'$x$(diameter) < 50, $x$(length) ≥ 50',
			'$x$(diameter) < 50, $x$(length) < 50',
		],
		handletextpad=0
	)

	plt.savefig(output, bbox_inches='tight')
